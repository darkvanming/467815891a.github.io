<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ubuntu下配置Lineage OS编译环境</title>
    <url>/2019/10/06/Android-envsetup/</url>
    <content><![CDATA[<p>系统为Ubuntu18.04<br>物理内存至少8G起步，16G以上最好，建议SWAP+RAM&gt;=20G，太小会爆内存。<br>硬盘空闲空间必须大于200G，因为光源码就70G左右了。</p>
<a id="more"></a>
<h1 id="安装依赖软件包"><a href="#安装依赖软件包" class="headerlink" title="安装依赖软件包"></a>安装依赖软件包</h1><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">update</span> &amp;&amp; sudo apt install -<span class="keyword">y</span> git curl <span class="keyword">python</span>-socks libncurses5-dev xclip &amp;&amp; git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/<span class="number">467815891</span><span class="keyword">a</span>/AndroidEnv_setup.git &amp;&amp; <span class="keyword">cd</span> AndroidEnv_setup &amp;&amp; sudo bash setup/android_build_env.<span class="keyword">sh</span> &amp;&amp; <span class="keyword">cd</span> ..</span><br></pre></td></tr></table></figure>
<h1 id="设置-git用户名和邮箱"><a href="#设置-git用户名和邮箱" class="headerlink" title="设置 git用户名和邮箱"></a>设置 git用户名和邮箱</h1><p>这一步其实可以省略，git clone的时候告诉远程仓库的托管服务商（如github）你的个人信息，用于认证，可以减少你被ban的几率。<br>示例如下：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">&quot;you@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">&quot;Your Name&quot;</span></span><br></pre></td></tr></table></figure>
<p>双引号中的 <code>“you@example.com” </code>填写您的 github 所使用的邮箱。注意格式，不要把双引号去掉。<br>双引号中的 <code>“Your Name” </code>填写您的 github 用户名，不要把双引号去掉。</p>
<h1 id="生成-ssh-并添加到-github"><a href="#生成-ssh-并添加到-github" class="headerlink" title="生成 ssh 并添加到 github"></a>生成 ssh 并添加到 github</h1><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh</span>-keygen -t ed<span class="number">25519</span> -C <span class="string">&quot;you@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">&quot;$(ssh-agent -s)&quot;</span></span><br><span class="line">ssh-add ~<span class="regexp">/.ssh/i</span>d_ed25519</span><br><span class="line">xclip -selection clipboard &lt; ~<span class="regexp">/.ssh/i</span>d_ed25519.pub</span><br></pre></td></tr></table></figure>
<p>然后将剪切板的内容粘贴到Github网站的个人设置中，详见<a target="_blank" rel="noopener" href="https://docs.github.com/articles/generating-an-ssh-key/">Github官方指导</a></p>
<h1 id="自行repo-init项目-以lineageos为例"><a href="#自行repo-init项目-以lineageos为例" class="headerlink" title="自行repo init项目(以lineageos为例)"></a>自行repo init项目(以lineageos为例)</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkdir lineageos &amp;&amp; cd lineageos &amp;&amp; repo init -u git:<span class="regexp">//gi</span>thub.com<span class="regexp">/LineageOS/</span>android.git -b lineage-<span class="number">17.0</span></span><br></pre></td></tr></table></figure>
<h1 id="新建local-manifests（或者手动同步device-tree，kernel-tree，vendor-tree）"><a href="#新建local-manifests（或者手动同步device-tree，kernel-tree，vendor-tree）" class="headerlink" title="新建local_manifests（或者手动同步device tree，kernel tree，vendor tree）"></a>新建local_manifests（或者手动同步device tree，kernel tree，vendor tree）</h1><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> .repo/local_manifests</span><br></pre></td></tr></table></figure>
<h1 id="同步项目"><a href="#同步项目" class="headerlink" title="同步项目"></a>同步项目</h1><p>因为网络环境不好，需要脚本自动化同步，失败不停重试。<br>在lineageos文件夹中新建<code>repo.sh</code>并写入脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat &gt; repo.sh &lt;&lt; <span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#是否启用本地代理同步源码 (需要配合ss-local开启使用)</span></span><br><span class="line">ENABLE_PROXY=0</span><br><span class="line"><span class="comment">#SS的服务器地址</span></span><br><span class="line">SERVER=</span><br><span class="line"><span class="comment">#SS的远程端口</span></span><br><span class="line">PORT=</span><br><span class="line"><span class="comment">#SS的密码</span></span><br><span class="line">PASSWD=</span><br><span class="line"><span class="comment">#SS的加密方式</span></span><br><span class="line">METHOD=chacha20-ietf-poly1305</span><br><span class="line"><span class="comment">#SS的本地监听端口</span></span><br><span class="line">LOCAL=1080</span><br><span class="line">NAME=Shadowsocks-local</span><br><span class="line">PID_FILE=<span class="variable">$HOME</span>/shadowsocks-local.pid</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_running</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ -r <span class="variable">$PID_FILE</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">read</span> PID &lt; <span class="variable">$PID_FILE</span></span><br><span class="line">        <span class="keyword">if</span> [ -d <span class="string">&quot;/proc/<span class="variable">$PID</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rm -f <span class="variable">$PID_FILE</span></span><br><span class="line">            <span class="built_in">return</span> 1</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">return</span> 2</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">proxy_off</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> check_running; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">kill</span> -9 <span class="variable">$PID</span></span><br><span class="line">        rm -f <span class="variable">$PID_FILE</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Stopping <span class="variable">$NAME</span> success&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NAME</span> is stopped&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">proxy_on</span></span>() &#123;</span><br><span class="line">    check_running</span><br><span class="line">    <span class="keyword">case</span> $? <span class="keyword">in</span></span><br><span class="line">        0)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NAME</span> (pid <span class="variable">$PID</span>) is running..., trying to restart&quot;</span></span><br><span class="line">        proxy_off</span><br><span class="line">        ;;</span><br><span class="line">        1|2)</span><br><span class="line">        <span class="built_in">command</span> -v ss-local &gt;/dev/null 2&gt;&amp;1 || &#123; <span class="built_in">echo</span> &gt;&amp;2 <span class="string">&quot;你好像没有安装ss-local&quot;</span>;<span class="built_in">exit</span> 1;&#125;</span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    ss-local -b 127.0.0.1 -s <span class="variable">$SERVER</span> -p <span class="variable">$PORT</span> -l <span class="variable">$LOCAL</span> -m <span class="variable">$METHOD</span> -k <span class="variable">$PASSWD</span> -f <span class="variable">$PID_FILE</span></span><br><span class="line">    <span class="keyword">if</span> check_running; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Starting <span class="variable">$NAME</span> success&quot;</span></span><br><span class="line">        <span class="built_in">export</span> http_proxy=<span class="string">&quot;socks5://127.0.0.1:<span class="variable">$&#123;LOCAL&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">export</span> https_proxy=<span class="string">&quot;socks5://127.0.0.1:<span class="variable">$&#123;LOCAL&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Setting Socks5 proxy for this shell success&quot;</span></span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Starting <span class="variable">$NAME</span> failed&quot;</span></span><br><span class="line">        <span class="built_in">unset</span> https_proxy</span><br><span class="line">        <span class="built_in">unset</span> http_proxy</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Unsetting Socks5 proxy for this shell success&quot;</span></span><br><span class="line">        retrun 1</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">repo_sync</span></span>() &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$ENABLE_PROXY</span> == <span class="string">&#x27;0&#x27;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;==========不使用代理同步源码=========&quot;</span></span><br><span class="line">        proxy_off</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> proxy_on; <span class="keyword">then</span> </span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;=========开始使用代理同步源码=========&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;========开启代理失败,不使用代理同步源码========&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    sleep 3</span><br><span class="line">    repo sync -j4 --no-clone-bundle --no-tags --force-sync</span><br><span class="line">    <span class="keyword">while</span> [ $? -ne 0 ]; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;======同步中断，重试中======&quot;</span> </span><br><span class="line">        repo_sync</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    proxy_off</span><br><span class="line">    <span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    sync)</span><br><span class="line">        repo_sync</span><br><span class="line">	;;</span><br><span class="line">    status)</span><br><span class="line">        <span class="keyword">if</span> [ ! -n <span class="string">&quot;<span class="variable">$https_proxy</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;当前终端代理设置为空&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;当前终端代理设置为<span class="variable">$&#123;https_proxy&#125;</span>&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        check_running</span><br><span class="line">            <span class="keyword">case</span> $? <span class="keyword">in</span></span><br><span class="line">                0)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NAME</span> (pid <span class="variable">$PID</span>) is running...&quot;</span></span><br><span class="line">                ;;</span><br><span class="line">                1|2)</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$NAME</span> is stopped&quot;</span></span><br><span class="line">                ;;</span><br><span class="line">            <span class="keyword">esac</span></span><br><span class="line">    ;;</span><br><span class="line">    proxy)</span><br><span class="line">        proxy_on</span><br><span class="line">    ;;</span><br><span class="line">    unproxy)</span><br><span class="line">        proxy_off</span><br><span class="line">        <span class="built_in">unset</span> http_proxy</span><br><span class="line">        <span class="built_in">unset</span> https_proxy</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Unsetting Socks5 proxy for this shell success&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">        repo_sync</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>赋予脚本执行权限并开始同步源码。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">chmod</span> <span class="selector-tag">a</span>+<span class="selector-tag">x</span> <span class="selector-tag">repo</span><span class="selector-class">.sh</span></span><br><span class="line"><span class="selector-tag">bash</span> <span class="selector-tag">repo</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="添加一些环境变量"><a href="#添加一些环境变量" class="headerlink" title="添加一些环境变量"></a>添加一些环境变量</h1><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> &#x27;export ALLOW_MISSING_DEPENDENCIES=<span class="literal">true</span>&#x27; &gt;&gt; ~<span class="string">/.bashrc</span></span><br><span class="line"><span class="keyword">echo</span> &#x27;export USE_CCACHE=1&#x27; &gt;&gt; ~<span class="string">/.bashrc</span></span><br><span class="line"><span class="keyword">echo</span> &#x27;export  _JAVA_OPTIONS=<span class="string">&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx8g&quot;</span>&#x27; &gt;&gt; ~<span class="string">/.bashrc</span></span><br><span class="line">source ~<span class="string">/.bashrc</span> &amp;&amp; export LANG=C</span><br></pre></td></tr></table></figure>
<h1 id="开始编译"><a href="#开始编译" class="headerlink" title="开始编译"></a>开始编译</h1><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">source</span> build/envsetup.<span class="keyword">sh</span></span><br><span class="line">lunch</span><br><span class="line"></span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>中兴B760HV2电视盒子完美刷机</title>
    <url>/2020/03/25/B760HV2/</url>
    <content><![CDATA[<p>丈母娘想看电视，我就寻思着现在有线电视不划来，网络都这么发达了，找点直播源也很简单。但是给长辈用最重要的还是简单易用最重要。<br>先说成果，通电后自动播放直播电视，整个过程大概25秒。<br><img src= "/img/loading.gif" data-lazy-src="B760HV2_show.webp" alt="B760HV2_show"><br>通过利用手头安徽移动送的这个中兴B760HV2智能机顶盒，安装AlexELEC系统来实现播放电视直播源，记录一下这个曲折的过程。<br><img src= "/img/loading.gif" data-lazy-src="B760HV2_1.jpg" alt="B760HV2_1"><br><img src= "/img/loading.gif" data-lazy-src="B760HV2_2.jpg" alt="B760HV2_2"></p>
<a id="more"></a>
<p>丈母娘家有一个移动办宽带送的电视盒子——中兴 ZXV10 B760HV2智能机顶盒（WiFi版），我想大多数电视盒子都是晶晨的主控，刷机应该不难。但是翻遍了全网，没找到这个机子的刷机教程，只找到了救砖线刷包，也算是给我吃了一颗定心丸，不怕死了，综合其他机子的刷机教程就是干。<br>首先要确定硬件配置，找到硬件相似的机型的刷机教程或者刷机包。拆开机子一看，Realtek RTL8818ETV + 1G RAM 的组合不出我意料，但4G NAND + Amlogic S805的Soc就让我有些傻眼了，这配置简直丐中丐。CoreELEC已经放弃了S80x系列的Soc了。本来CoreELEC刷机包都下载好了，现在要重新查资料了。最终找到了支持S805的Kodi系统<a target="_blank" rel="noopener" href="https://github.com/AlexELEC/AE-AML/releases">AlexELEC</a>，看样子应该是LibreELEC和CoreELEC的魔改版，但是支持S805，Kodi版本同步到目前最新的18.6，也找到了相似的机型<a target="_blank" rel="noopener" href="https://www.rigacci.org/wiki/doku.php/doc/appunti/hardware/mxq_s805">MXQ (FW V2.0)</a> (代号m201c)，NAND闪存差了4G，不过FLASH大小应该和内核没关系，启动后可以自己识别。</p>
<h1 id="进入Update模式（从TF卡启动）"><a href="#进入Update模式（从TF卡启动）" class="headerlink" title="进入Update模式（从TF卡启动）"></a>进入Update模式（从TF卡启动）</h1><p>按照帖子中的操作，将AlexELEC烧入TF卡（用<a target="_blank" rel="noopener" href="https://sourceforge.net/projects/win32diskimager/files/Archive/">Win32DiskImager</a>把img烧入TF卡），然后插入机器，上电。。。按照MXQ的刷机教程，此时已经可以从TF卡启动了，然而实际情况还是进入百视通自己的系统(从NAND启动的)。看来这个机子在软件上还是做了一些防刷机的屏蔽。仔细查看机子的裸板，没有复位键，没有短接点位，没有额外的SPI Flash做NAND里面系统的引导，网上说的那些捅菊花、短接进入升级模式方法都不好使了。不过发现了6根排针，不知道能不能找到TXD和RXD，通过串口控制台进入升级模式。<br>万用表测出GND，固定波特率115200,用USB TTL的RXD挨个碰其他针脚观察控制台的输出，注意只有启动前几秒才能观察到，启动完成之后串口不再向外输出。所以测试每根针脚时都要重新上电。最终测试出TXD和RXD，还好这个板子留出了TTL针脚，给我留了一条活路。<br><img src= "/img/loading.gif" data-lazy-src="B760HV2_TTL.jpg" alt="B760HV2_TTL"><br>登陆控制台之后发现这个机子的用户名也是m201,看来m201可能是Amlogic的公版代号。B760HV2的遥控器看起来跟MXQ的遥控器还是不一样，刷机之前首先保存遥控器的配置文件<code>remote.conf</code>（后面附具体内容），不然刷完机后，遥控器的按键编码我还要重新录制，重新设定按键响应。然后尝试重启进入刷机模式，在串口中输入</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">reboot update</span></span><br></pre></td></tr></table></figure>
<p>结果失败了，依然直接进入自带的系统，貌似在Uboot中禁用了update模式。我彻底怒了，串口定时每0.1秒发送enter，中断Uboot启动。修改Uboot的环境变量，将重启模式改为升级模式</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute"><span class="nomarkup">setenv</span></span> reboot_mode update</span><br></pre></td></tr></table></figure>
<p>断电重启，这一次不用中断Uboot，等他自然进入系统，然后输入</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">reboot update</span></span><br></pre></td></tr></table></figure>
<p>串口输出变了，这一次终于可以从TF卡启动进入AlexELEC了，赶紧插上网线，然后尝试SSH登陆。。。哎呀，root密码不知道啊。接上键盘、显示器在AlexELEC设置中直接更改SSH的密码。（因为AlexELEC是毛子做的系统，默认语言是俄文，需要先改字体为Arial，再改语言为Chinese，别问我怎么看懂的，Kodi我玩的熟了，闭着眼都能改语言）</p>
<h1 id="安装AlexELEC系统到内置NAND"><a href="#安装AlexELEC系统到内置NAND" class="headerlink" title="安装AlexELEC系统到内置NAND"></a>安装AlexELEC系统到内置NAND</h1><p>简单测试一下，wifi正常，RAM、ROM容量识别正常，HDMI输出正常，声音正常，红外遥控器的大部分按键正常（数字键和方向键正常，但是也有些按键，比如确认键和音量键的映射不正常）。遥控器的问题不大，可以慢慢调整配置文件。总之，系统完全工作正常，把TF卡中的系统安装到NAND闪存中，SSH控制台中输入</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">installtointernal</span></span><br></pre></td></tr></table></figure>
<p>一路输入yes，完成安装。安装完成之后，关机</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">poweroff</span></span><br></pre></td></tr></table></figure>
<p>拔出TF卡，断电后再重新上电，成功进入AlexELEC，到此为止成功安装AlexELEC系统到内置NAND。</p>
<h1 id="Kodi中配置PVR直播电视"><a href="#Kodi中配置PVR直播电视" class="headerlink" title="Kodi中配置PVR直播电视"></a>Kodi中配置PVR直播电视</h1><p>启用IPTV Simple PVR Client插件（默认禁用）并配置IPTV Simple PVR Client。</p>
<ul>
<li>找到了一个<del>可靠的</del>有点慢的<a target="_blank" rel="noopener" href="https://github.com/BurningC4/Chinese-IPTV">直播源</a>(包含CCTV+地方卫视)，（更新：<a target="_blank" rel="noopener" href="https://raw.githubusercontent.com/wuxiaoxiong1990/IPTVsource/master/ipv4.m3u">可靠的直播源</a>），可以直接填入IPTV Simple PVR Client的设置。</li>
<li>更改IPTV Simple PVR Client的设置，每次切换频道无需按确认键，还原老式电视的操作方式</li>
<li>Kodi的用户设置中，启动时自动打开PVR，再也不要担心妈妈不会调</li>
</ul>
<h1 id="调教红外遥控器"><a href="#调教红外遥控器" class="headerlink" title="调教红外遥控器"></a>调教红外遥控器</h1><p>真的是走了很多弯路，之前用过树莓派的红外线，以为是差不多的，犯了思维定势的错误。新版的LibreELEC已经支持amremote从系统底层接管红外了，AlexELEC当然也跟上了。忘记lirc和meson-ir吧，记录红外按键也不是用ir-keytable了，因为根本没有/dev/lirc0这个设备了,取而代之的是<code>/dev/amremote</code>。<br>amremote一听名字就知道是Amlogic平台的遥控器驱动，它的作用是将红外编码直接映射为键盘上的按键，所以不需要在Kodi中额外配置红外遥控器，更不需要通过keymap editor来重新设置键盘映射！amremote的工作流程是将遥控器的的红外编码(ircode)对应成key code，再触发key code代表的键盘按键。ircode与key code的对应关系在配置文件<code>/storage/.config/amremote/remote.conf</code>中(也就是我们之前在原厂固件中保存的那个)，key code与键盘按键的对应关系在<code>/storage/.config/amremote/Config_key.sample</code>中(这个只是说明文件，不可更改，对应关系已经编译进驱动了)。下面记录一下如何完成一个遥控器的适配，或者说自定义。<br>首先停止kodi，不然kodi会产生许多我们不需要的内核调试信息，干扰我们调试</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">stop</span> kodi</span><br></pre></td></tr></table></figure>
<p>在测试遥控器按键前，丢弃我们不想要的之前的内核日志</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">dmesg -c</span></span><br></pre></td></tr></table></figure>
<p>下面可以冲着盒子按下你想要更改的遥控器的按键，按一个按键一次，尽量手速加快，按一下就松手(不然就和我下面的图里一样，接收到多个红外编码)，接着你就可以在内核日志中看到红外编码ircode</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">dmesg -c</span></span><br></pre></td></tr></table></figure>
<p>比如我按下遥控器上红色的按钮，输出了以下内核日志<br><img src= "/img/loading.gif" data-lazy-src="B760HV2_ircode.png" alt="B760HV2_ircode"><br>图中的0x0e就是ircode<br>下面就在<code>remote.conf</code>寻找ircode对应的key code，有两种情况，一种是配置文件里面已经有这个按键的ircode了，你需要更改后面的key code;另一种是没有对应的ircode，你需要自己添加。然后key code是你要去<code>Config_key.sample</code>查找你想要的按键。<br>以上面的例子ircode=0x0e为例，在<code>remote.conf</code>中寻找这个ircode<br><img src= "/img/loading.gif" data-lazy-src="B760HV2_keycode.png" alt="B760HV2_keycode"><br>可以看到在我这个配置文件中红外编码（ircode）0xe被映射成了key code为0x18e的按键，那么这个按键到底是什么呢？我们可以进<code>Config_key.sample</code>查找<br><img src= "/img/loading.gif" data-lazy-src="B760HV2_key.png" alt="B760HV2_key"><br>可以看到已经正确对应到红色按键了，所以这个按键不用修改。如果你想把这个红外按键对应到别的键盘按键，就需要在<code>Config_key.sample</code>查找对应的key code，替换掉<code>remote.conf</code>中的0x18e这个key code。<br>全部按键修改完成后用以下命令即时生效</p>
<figure class="highlight basic"><table><tr><td class="code"><pre><span class="line"><span class="comment">remotecfg /storage/.config/amremote/remote.conf</span></span><br></pre></td></tr></table></figure>
<p>然后可以在kodi里面测试</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> kodi</span><br></pre></td></tr></table></figure>
<p>下面是我最终修改过的<code>remote.conf</code>，大部分按键我都按照按键上面的中文意思，对应了相近的实体按键。<br><a href="remote.conf">下载remote.conf</a></p>
<h1 id="曲线救国实现Autossh"><a href="#曲线救国实现Autossh" class="headerlink" title="曲线救国实现Autossh"></a>曲线救国实现Autossh</h1><p>万一哪天直播源失效了，丈母娘看不了电视，我的高大形象毁于一旦。所以给自己留个后门，便于远程维护。首先想到的就是AutoSSH维持远程反向连接通道，可惜AlexELEC没有AutoSSH，也没有软件包管理器，不能安装软件。但是可以用Systemd托管SSH呀。</p>
<ul>
<li>先配置公网远程服务器</li>
</ul>
<p>修改公网服务器的SSH配置文件<code>/etc/ssh/sshd_config</code>  </p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">GatewayPorts</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<p>这样可以把监听的端口绑定到任意IP 0.0.0.0上，否则只有本机127.0.0.1可以访问。<br>记得重启SSH服务器</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>restart sshd</span><br></pre></td></tr></table></figure>
<ul>
<li>电视盒子上生成密钥</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -f <span class="regexp">/storage/</span>.ssh/id_rsa</span><br></pre></td></tr></table></figure>
<ul>
<li>将电视盒子密钥添加到公网远程服务器</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cat <span class="regexp">/storage/</span>.ssh<span class="regexp">/id_rsa.pub | ssh 远程用户名@远程服务器地址 &#x27;cat &gt;&gt; .ssh/</span>authorized_keys<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>测试</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ssh</span> <span class="selector-tag">-NTR</span> <span class="selector-attr">[远程映射端口]</span><span class="selector-pseudo">:localhost</span><span class="selector-pseudo">:22</span> 远程用户名@远程服务器地址 -o ExitOnForwardFailure=yes</span><br></pre></td></tr></table></figure>
<p>然后直接ssh连接远程服务器的远程映射端口就可以连上电视盒子了。</p>
<ul>
<li>编写serivce文件</li>
</ul>
<p>用你喜欢的文本编辑器，编辑<code>/storage/.config/system.d/autossh.service</code></p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=SSH Tunnel</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Restart</span>=always</span><br><span class="line"><span class="attr">RestartSec</span>=<span class="number">5</span></span><br><span class="line"><span class="attr">User</span>=root</span><br><span class="line"><span class="attr">ExecStart</span>=/bin/ssh -NTR [远程映射端口]:localhost:<span class="number">22</span> 远程用户名@远程服务器地址 -o ExitOnForwardFailure=<span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>
<p>启用这个服务，下次开机自动启动</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">systemctl <span class="builtin-name">enable</span> autossh.service</span><br></pre></td></tr></table></figure>

<h1 id="加散热片和改内置WiFi天线"><a href="#加散热片和改内置WiFi天线" class="headerlink" title="加散热片和改内置WiFi天线"></a>加散热片和改内置WiFi天线</h1><p>图片丢了，就不贴了。焊了一个号称5DB的内置PCB天线效果，效果非常不好，后来还是改用了USB无线网卡。<br>到此功能全部实现，折腾结束</p>
]]></content>
  </entry>
  <entry>
    <title>部署Hexo笔记</title>
    <url>/2019/10/05/Hexo-install/</url>
    <content><![CDATA[<p>个人Hexo博客搭建的记录，我不想让别人看到推送记录，所以都是强制推送。</p>
<a id="more"></a>
<ul>
<li>先克隆已经配置好的源码  <figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>tlab.com<span class="regexp">/weiyangbo/</span>weiyangbo.gitlab.io.git &amp;&amp; cd weiyangbo.gitlab.io</span><br></pre></td></tr></table></figure></li>
<li>安装hexo  <figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> -y npm &amp;&amp; sudo npm <span class="keyword">install</span> hexo-cli gulp -g &amp;&amp; npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure></li>
<li>推送到Gitlab并自动构建网页  <figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">rm -rf .git <span class="variable">&amp;&amp;</span> git init <span class="variable">&amp;&amp;</span> git <span class="meta">add</span> . <span class="variable">&amp;&amp;</span> git remote <span class="meta">add</span> origin git@gitlab.com:weiyangbo/weiyangbo.gitlab.io.git <span class="variable">&amp;&amp;</span> git commit -a -m <span class="string">&quot;Init Blog&quot;</span> <span class="variable">&amp;&amp;</span>  git push -f --<span class="meta">set</span>-upstream origin master</span><br></pre></td></tr></table></figure></li>
<li>推送静态网页到GitHub &amp;&amp; Gitee (Github推送后自动部署，Gitee推送后需手动更新)  <figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">rm -rf .deploy_git/ <span class="variable">&amp;&amp;</span> hexo clean <span class="variable">&amp;&amp;</span> hexo g <span class="variable">&amp;&amp;</span> gulp <span class="variable">&amp;&amp;</span> hexo d</span><br></pre></td></tr></table></figure></li>
<li>不到万不得已，不使用cnpm  <figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> &#x27;<span class="keyword">alias</span> cnpm=<span class="string">&quot;npm --registry=https://registry.npm.taobao.org --cache=$HOME/.npm/.cache/cnpm --disturl=https://npm.taobao.org/dist --userconfig=$HOME/.cnpmrc&quot;</span>&#x27; &gt;&gt; ~<span class="string">/.bashrc</span> &amp;&amp; source ~<span class="string">/.bashrc</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>在Ubuntu 18.04上设置MTU</title>
    <url>/2019/11/14/MTU-reset/</url>
    <content><![CDATA[<p>用SSH连接服务器经常无缘无故断掉，SSH/SS连接表现出非常不稳定。但是用别的方法测试（ping或者访问服务器网页）速度都非常快，也没有丢包。<br>一番搜索，发现是MTU值为1500设置太高了，表现为SSH客户端在认证时会卡在<code>debug1: SSH2_MSG_KEXINIT sent</code><br>下面分别给出在Ubuntu 18.04和Android下设置MTU的方法。</p>
<a id="more"></a>
<h1 id="Ubuntu下的设置方式"><a href="#Ubuntu下的设置方式" class="headerlink" title="Ubuntu下的设置方式"></a>Ubuntu下的设置方式</h1><p>这是没有桌面环境的Ubuntu的设置方法，如果有桌面环境，那么直接进入<code>network-manager</code>中修改就完事了。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">vi <span class="regexp">/etc/</span>netplan/<span class="number">99</span>-netcfg.yaml</span><br></pre></td></tr></table></figure>
<p>以我的文件为例</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">network:</span></span><br><span class="line">  <span class="attr">version:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">renderer:</span> <span class="string">networkd</span></span><br><span class="line">  <span class="attr">ethernets:</span></span><br><span class="line">    <span class="attr">eth0:</span></span><br><span class="line">      <span class="attr">dhcp4:</span> <span class="literal">yes</span></span><br><span class="line">      <span class="attr">mtu:</span> <span class="number">1400</span></span><br><span class="line">      <span class="attr">dhcp6:</span> <span class="literal">no</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>重启后永久生效</p>
<h1 id="Android下的设置方式"><a href="#Android下的设置方式" class="headerlink" title="Android下的设置方式"></a>Android下的设置方式</h1><p>首先需要知道移动数据走的是哪一个网卡</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ifconfig</span></span><br></pre></td></tr></table></figure>
<p>以我的手机为例</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  Mask:<span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span> </span><br><span class="line">          inet6 addr: ::<span class="number">1</span>/<span class="number">128</span> Scope: Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:<span class="number">65536</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">20080</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span> </span><br><span class="line">          TX packets:<span class="number">20080</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span> </span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1</span> </span><br><span class="line">          RX bytes:<span class="number">45435532</span> TX bytes:<span class="number">45435532</span> </span><br><span class="line"></span><br><span class="line">dummy0    Link encap:Ethernet  HWaddr <span class="number">66</span>:e6:<span class="number">63</span>:<span class="number">4</span>b:<span class="number">93</span>:c8</span><br><span class="line">          inet6 addr: fe80::<span class="number">64e6</span>:<span class="number">63f</span>f:fe4b:<span class="number">93</span>c8/<span class="number">64</span> Scope: Link</span><br><span class="line">          UP BROADCAST RUNNING NOARP  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">0</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span> </span><br><span class="line">          TX packets:<span class="number">18</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span> </span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX bytes:<span class="number">0</span> TX bytes:<span class="number">1260</span> </span><br><span class="line"></span><br><span class="line">wlan0     Link encap:Ethernet  HWaddr <span class="number">26</span>:<span class="number">1</span>e:<span class="number">1</span>b:ed:<span class="number">72</span>:f0  Driver icnss</span><br><span class="line">          inet addr:<span class="number">192.168</span><span class="number">.2</span><span class="number">.146</span>  Bcast:<span class="number">192.168</span><span class="number">.2</span><span class="number">.255</span>  Mask:<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> </span><br><span class="line">          inet6 addr: fe80::<span class="number">241</span>e:<span class="number">1</span>bff:feed:<span class="number">72f</span>0/<span class="number">64</span> Scope: Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">513977</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span> </span><br><span class="line">          TX packets:<span class="number">479613</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span> </span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">3000</span> </span><br><span class="line">          RX bytes:<span class="number">367769689</span> TX bytes:<span class="number">87048137</span> </span><br><span class="line"></span><br><span class="line">rmnet_data0 Link encap:UNSPEC  </span><br><span class="line">          inet6 addr: fe80::fa03:<span class="number">7</span>b88:<span class="number">43</span>a:a1e/<span class="number">64</span> Scope: Link</span><br><span class="line">          UP RUNNING  MTU:<span class="number">2000</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">34</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span> </span><br><span class="line">          TX packets:<span class="number">17</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span> </span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX bytes:<span class="number">17154</span> TX bytes:<span class="number">1200</span> </span><br><span class="line"></span><br><span class="line">rmnet_ipa0 Link encap:UNSPEC  </span><br><span class="line">          UP RUNNING  MTU:<span class="number">2000</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">116428</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span> </span><br><span class="line">          TX packets:<span class="number">110877</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span> </span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX bytes:<span class="number">178292211</span> TX bytes:<span class="number">15220756</span> </span><br><span class="line"></span><br><span class="line">rmnet_data1 Link encap:UNSPEC  </span><br><span class="line">          inet addr:<span class="number">172.24</span><span class="number">.3</span><span class="number">.137</span>  Mask:<span class="number">255.255</span><span class="number">.255</span><span class="number">.252</span> </span><br><span class="line">          UP RUNNING  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">175319</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span> </span><br><span class="line">          TX packets:<span class="number">110860</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span> </span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1000</span> </span><br><span class="line">          RX bytes:<span class="number">176170341</span> TX bytes:<span class="number">15219556</span> </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以看到rmnet_data0是没有连接网络的，移动数据在rmnet_data1上，下面修改MTU</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">su</span><br><span class="line">ip link <span class="builtin-name">set</span> dev rmnet_data1 mtu 1400</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">su</span><br><span class="line">echo <span class="number">1400</span> &gt; /sys/<span class="keyword">class</span>/<span class="symbol">net</span>/<span class="symbol">rmnet_data1</span>/<span class="symbol">mtu</span></span><br></pre></td></tr></table></figure>
<p>立马生效，不过重启后恢复默认值。<br>嫌麻烦可以修改init.rc,添加一行，永久生效</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">write</span> <span class="regexp">/sys/</span><span class="keyword">class</span><span class="regexp">/net/</span>rmnet_data1/mtu <span class="number">1400</span></span><br></pre></td></tr></table></figure>

<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>后来发现服务端上也有报错<code>error: Could not load host key: /etc/ssh/ssh_host_ed25519_key</code></p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh</span>-keygen -t ed<span class="number">25519</span> -f /etc/ssh/ssh_host_ed<span class="number">25519</span>_key</span><br></pre></td></tr></table></figure>
<p>重新生成密钥之后，多用一段时间再看疗效。</p>
]]></content>
  </entry>
  <entry>
    <title>编译安装Nginx+FancyIndex</title>
    <url>/2019/10/26/Nginx-FancyIndex/</url>
    <content><![CDATA[<p>如果光是满足文件目录的需求有许多方案，如小程序webd，Python的SimpleHTTPServer，NPM的http-server，开源的的FileBrowser，闭源的FileRun…<br>而我选择了一个不上不下的方案，也就是Nginx+FancyIndex模块。优点是可以轻松地实现防盗链和Https的支持。</p>
<a id="more"></a>
<h1 id="编译安装Nginx"><a href="#编译安装Nginx" class="headerlink" title="编译安装Nginx"></a>编译安装Nginx</h1><p>必须要编译时添加FancyIndex模块才可以使用，所以先编译Nginx<br>克隆FancyIndex模块的源码</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/aperezdc/</span>ngx-fancyindex.git ngx-fancyindex</span><br></pre></td></tr></table></figure>
<figure class="highlight q"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">update</span> &amp;&amp; sudo apt-<span class="built_in">get</span> install build-essential libtool gcc automake autoconf make libpcre3 libpcre3-<span class="built_in">dev</span> zlib1g-<span class="built_in">dev</span> openssl-y</span><br></pre></td></tr></table></figure>
<p>去 <a target="_blank" rel="noopener" href="http://nginx.org/download/">http://nginx.org/download/</a> 下载最新的Nginx源码，后缀为*.tar.gz的才是Linux版本</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">wget http:<span class="comment">//nginx.org/download/nginx-1.17.6.tar.gz</span></span><br><span class="line">tar xvzf nginx-*<span class="selector-class">.tar</span><span class="selector-class">.gz</span> &amp;&amp; rm nginx-*<span class="selector-class">.tar</span>.gz</span><br><span class="line">cd nginx-*</span><br></pre></td></tr></table></figure>
<p>编译时记得连带将FancyIndex模块添加进去</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/configure --prefix=/u</span>sr --sbin-path=<span class="regexp">/usr/</span>sbin<span class="regexp">/nginx --conf-path=/</span>etc<span class="regexp">/nginx/</span>nginx.conf --error-log-path=<span class="regexp">/var/</span>log<span class="regexp">/nginx_error.log --http-log-path=/</span>var<span class="regexp">/log/</span>nginx_access.log --pid-path=<span class="regexp">/var/</span>run<span class="regexp">/nginx.pid --lock-path=/</span>var<span class="regexp">/lock/</span>nginx.lock --user=root --<span class="keyword">group</span>=root --with-http_ssl_module --without-http_ssi_module --without-http_memcached_module --without-http_browser_module --without-http_geo_module  --without-http_scgi_module  --without-http_uwsgi_module --without-select_module --add-module=../ngx-fancyindex</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<h1 id="将Nginx添加开机启动"><a href="#将Nginx添加开机启动" class="headerlink" title="将Nginx添加开机启动"></a>将Nginx添加开机启动</h1><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/systemd/system/nginx.service &gt;/dev/<span class="literal">null</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=nginx</span><br><span class="line"><span class="attribute">After</span>=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">User</span>=root</span><br><span class="line"><span class="attribute">Type</span>=forking</span><br><span class="line"><span class="attribute">PIDFile</span>=/var/run/nginx.pid</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/sbin/nginx</span><br><span class="line"><span class="attribute">ExecReload</span>=/usr/sbin/nginx -s reload</span><br><span class="line"><span class="attribute">ExecStop</span>=/usr/sbin/nginx -s stop</span><br><span class="line"><span class="attribute">PrivateTmp</span>=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>将Nginx交给Systemd托管，设置Nginx下次开机启动</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload &amp;&amp; sudo systemctl <span class="builtin-name">enable</span> nginx.service</span><br></pre></td></tr></table></figure>
<h1 id="为FancyIndex更换默认主题"><a href="#为FancyIndex更换默认主题" class="headerlink" title="为FancyIndex更换默认主题"></a>为FancyIndex更换默认主题</h1><p>默认的橙色主题是在太丑了，换成一个并没有名字的FancyIndex Theme<br><code>cd</code>到你的站点根目录，如<code>/www/wwwroot</code>，然后克隆这个主题</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/467815891a/</span>nginx-fancyindex-theme.git fancyindex</span><br></pre></td></tr></table></figure>
<p>在Nginx站点配置文件的<code>location</code>域中配置FancyIndex，这里直接贴上我Nginx的整个配置文件，以此为例</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">user</span>  <span class="string">root;</span></span><br><span class="line"><span class="attr">worker_processes</span>  <span class="string">2;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid</span>        <span class="string">/var/run/nginx.pid;</span></span><br><span class="line"><span class="attr">error_log</span> <span class="string">/var/log/nginx_error.log;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">events</span> <span class="string">&#123;</span></span><br><span class="line">	<span class="attr">use</span> <span class="string">epoll;</span></span><br><span class="line">	<span class="attr">worker_connections</span>  <span class="string">1024;</span></span><br><span class="line">	<span class="attr">multi_accept</span> <span class="string">on;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">http</span> <span class="string">&#123;</span></span><br><span class="line">	<span class="attr">include</span>       <span class="string">mime.types;</span></span><br><span class="line">	<span class="attr">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line">	<span class="attr">charset</span> <span class="string">utf-8;</span></span><br><span class="line">	<span class="attr">sendfile</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">tcp_nopush</span>     <span class="string">on;</span></span><br><span class="line">	<span class="attr">tcp_nodelay</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">keepalive_timeout</span>  <span class="string">60;</span></span><br><span class="line">	<span class="attr">client_header_buffer_size</span> <span class="string">4k;</span></span><br><span class="line">	<span class="attr">open_file_cache</span> <span class="string">max=102400 inactive=20s;</span></span><br><span class="line">	<span class="attr">open_file_cache_valid</span> <span class="string">30s;</span></span><br><span class="line">	<span class="attr">open_file_cache_min_uses</span> <span class="string">1;</span></span><br><span class="line">	<span class="attr">client_header_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">client_body_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">reset_timedout_connection</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">send_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">gzip</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">gzip_disable</span> <span class="string">&quot;msie6&quot;;</span></span><br><span class="line">	<span class="attr">gzip_vary</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">gzip_proxied</span> <span class="string">any;</span></span><br><span class="line">	<span class="attr">gzip_comp_level</span> <span class="string">3;</span></span><br><span class="line">	<span class="attr">gzip_buffers</span> <span class="string">16 8k;</span></span><br><span class="line">	<span class="attr">gzip_http_version</span> <span class="string">1.1;</span></span><br><span class="line">	<span class="attr">gzip_types</span> <span class="string">text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</span></span><br><span class="line">	<span class="attr">server_tokens</span> <span class="string">off;</span></span><br><span class="line">	<span class="attr">access_log</span>  <span class="string">/var/log/nginx_access.log;</span></span><br><span class="line"></span><br><span class="line">	<span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">		<span class="attr">listen</span>      <span class="string">443 ssl;</span></span><br><span class="line">		<span class="attr">server_name</span>  <span class="string">weiyangbo.com www.weiyangbo.com; #此处填你网站的域名</span></span><br><span class="line"><span class="comment">		#下面两行是你的ssl证书的路径</span></span><br><span class="line">		<span class="attr">ssl_certificate</span> <span class="string">/etc/nginx/cert/xxxxxxx.pem;</span></span><br><span class="line">		<span class="attr">ssl_certificate_key</span> <span class="string">/etc/nginx/cert/xxxxxxx.key;</span></span><br><span class="line">		<span class="attr">ssl_protocols</span> <span class="string">TLSv1 TLSv1.1 TLSv1.2;</span></span><br><span class="line">		<span class="attr">ssl_prefer_server_ciphers</span> <span class="string">on;</span></span><br><span class="line">		<span class="attr">ssl_session_timeout</span> <span class="string">5m;</span></span><br><span class="line">		<span class="attr">ssl_ciphers</span>  <span class="string">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class="line">		<span class="attr">root</span> <span class="string">/www; #此处填你的网站目录</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">/ &#123;</span></span><br><span class="line">			<span class="attr">expires</span> <span class="string">10h;</span></span><br><span class="line">			<span class="attr">fancyindex</span> <span class="string">on;</span></span><br><span class="line">			<span class="attr">fancyindex_exact_size</span> <span class="string">off;</span></span><br><span class="line">			<span class="attr">fancyindex_localtime</span> <span class="string">on;</span></span><br><span class="line">			<span class="attr">fancyindex_header</span> <span class="string">&quot;/fancyindex/header.html&quot;;</span></span><br><span class="line">			<span class="attr">fancyindex_footer</span> <span class="string">&quot;/fancyindex/footer.html&quot;;</span></span><br><span class="line">			<span class="attr">fancyindex_ignore</span> <span class="string">&quot;fancyindex&quot; &quot;Download&quot;;  #可以自定义文件服务器中不显示的文件或文件夹</span></span><br><span class="line">			<span class="attr">fancyindex_name_length</span> <span class="string">500;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line"><span class="comment">		#这是防盗链设置</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">~*  ^.+\.(jpg|gif|png|img|apk|tar.gz|wmv|jpeg|mp3|mp4|zip|rar)$ &#123;</span></span><br><span class="line">			<span class="attr">valid_referers</span> <span class="string">none blocked weiyangbo.com www.weiyangbo.com;</span></span><br><span class="line">			<span class="attr">if</span> <span class="string">($invalid_referer)&#123;</span></span><br><span class="line">				<span class="attr">return</span> <span class="string">403;</span></span><br><span class="line">				<span class="attr">break;</span></span><br><span class="line">			<span class="attr">&#125;</span></span><br><span class="line">			<span class="attr">access_log</span> <span class="string">off;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line">	<span class="attr">&#125;</span></span><br><span class="line"><span class="comment">	#重定向80端口的全部http请求去https</span></span><br><span class="line">	<span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">		<span class="attr">listen</span> <span class="string">80;</span></span><br><span class="line">		<span class="attr">server_name</span> <span class="string">weiyangbo.com www.weiyangbo.com; #网站域名，跟上面保持一致</span></span><br><span class="line">		<span class="attr">return</span> <span class="string">301 https://$server_name$request_uri;</span></span><br><span class="line">	<span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="测试网站"><a href="#测试网站" class="headerlink" title="测试网站"></a>测试网站</h1><p>检测配置文件有无语法错误</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nginx -t</span></span><br></pre></td></tr></table></figure>
<p>尝试启动Nginx，看看实际效果。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nginx</span></span><br></pre></td></tr></table></figure>
<h1 id="定时清理Nginx日志"><a href="#定时清理Nginx日志" class="headerlink" title="定时清理Nginx日志"></a>定时清理Nginx日志</h1><p>Nginx没有日志自动归档或者清除的功能，我们要借助logrotate来定时清理日志，不然如果网页访问量大，没几天日志大小就上GB了，磁盘都不知道怎么爆的</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">sudo tee <span class="regexp">/etc/</span>logrotate.d<span class="regexp">/nginx &gt;/</span>dev/<span class="keyword">null</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="regexp">/var/</span>log/nginx_*.log  &#123;</span><br><span class="line">su root root</span><br><span class="line"><span class="keyword">size</span> <span class="number">10000</span></span><br><span class="line">daily</span><br><span class="line">rotate <span class="number">3</span></span><br><span class="line">missingok</span><br><span class="line">dateext</span><br><span class="line">compress</span><br><span class="line">delaycompress</span><br><span class="line">notifempty</span><br><span class="line">create <span class="number">640</span> root root</span><br><span class="line">sharedscripts</span><br><span class="line">postrotate</span><br><span class="line">    <span class="keyword">if</span> [ -f <span class="regexp">/var/</span>run/nginx.pid ]; then</span><br><span class="line">       l -USR1 `cat <span class="regexp">/var/</span>run/nginx.pid`</span><br><span class="line">    fi</span><br><span class="line">endscript</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p><code>sudo logrotate /etc/logrotate.d/nginx</code></p>
]]></content>
  </entry>
  <entry>
    <title>OrangePi第一次配置</title>
    <url>/2020/03/12/OrangePi-Setup/</url>
    <content><![CDATA[<p>入手了OrangePi Zero玩玩，已经把他做成了智能音箱了，结果不知道怎么回事就突然出问题了。之前一直都是通过WiFi连接SSH服务器来控制OrangePi Zero，现在的情况是WiFi刚连上就死机了。<br>OrangePi Zero已经用胶粘在音箱里了，TF卡可以取出来，但是网口没有空间插网线了。突然想起来手上还有一个CH340（USB转TTL）可以用来连接OrangePi Zero，记录一下不用网线配置OrangePi。<br> <a id="more"></a></p>
<h1 id="烧入Armbian"><a href="#烧入Armbian" class="headerlink" title="烧入Armbian"></a>烧入Armbian</h1><p>官方的Linux镜像已经完全不更新了。还是Armbian好，一直在不断更新，内核也到了5.4<br>下载<a target="_blank" rel="noopener" href="https://www.armbian.com/orange-pi-zero/">OrangePi Zero的镜像</a>，需要注意的是，我强烈推荐Ubuntu版的Armbian，Debian版反应迟缓、经常死机，具体原因不清楚。<br>然后解压，校验镜像<br><code>7z e Armbian_*.7z &amp;&amp; sha256sum --check Armbian_*.img.sha</code><br>接着将SD卡插入电脑，查看SD的分区，如sdX<br><code>lsblk -p</code><br>依次卸载SD卡的所有分区<br><code>sudo umount /dev/sdX*</code><br>等等<br>烧录镜像<br><code>sudo dd bs=4M if=[你解压出来的img文件] of=/dev/sdX conv=fsync</code></p>
<h1 id="TTL连接"><a href="#TTL连接" class="headerlink" title="TTL连接"></a>TTL连接</h1><p>将USB TTL的Tx和Rx分别与OrangePi Zero的Rx和Tx连接起来，插入电脑的USB口。<br>安装并以root身份开启putty<br><code>sudo apt-get install putty</code><br><code>sudo putty</code><br>串口设备选择ttyUSB0，波特率115200,打开串口，然后接通OrangPi Zero的电源，不出意外可以看到串口打印出内核启动的信息了。</p>
<h1 id="连接WiFi"><a href="#连接WiFi" class="headerlink" title="连接WiFi"></a>连接WiFi</h1><p>Armbian默认的root密码是1234,设置好新密码后我们就可以连接wifi了<br><code>nmcli radio wifi on</code><br><code>nmcli d wifi connect YOUR_SSID password YOUR_PASSWROD</code><br>然后我们就可以查看IP地址了<br><code>ifconfig</code><br>尝试SSH连接吧，记得运行<code>armbian-config</code>更换国内软件源</p>
<h1 id="断线重连"><a href="#断线重连" class="headerlink" title="断线重连"></a>断线重连</h1><p>为了防止由于WiFi不稳定造成的断线问题，我们可以利用Crontab每分钟检测WiFi连接情况，判断是否要重新连接。<br><code>sudo crontab -e</code><br>追加一行<br><code>* * * * * ping $(ip route show default | awk &#39;/default/ &#123;print $3&#125;&#39;) -c3 || reboot</code></p>
<h1 id="设置音频输出"><a href="#设置音频输出" class="headerlink" title="设置音频输出"></a>设置音频输出</h1><p>不管是树莓派还是其他Pi，ALSA管理的音频输出一直是我头疼的问题。一方面ALSA的配置极其复杂，各种card，device，asound.conf，.asoundrc让人眼花缭乱；另一方面这些开发板音频口底噪都比较大，如果能在软件方面提高音量，那跟从功放端提高音量相比可以减少噪声输出。<br>对于OrangePi Zero,我赶紧把调好步骤记录下来</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">3</span> <span class="number">31</span></span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">4</span> on</span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">1</span> <span class="number">63</span></span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">10</span> on</span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">7</span> <span class="number">7</span></span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">18</span> on</span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">8</span> <span class="number">1</span></span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">13</span> off</span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">5</span> <span class="number">7</span></span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">19</span> on</span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">6</span> <span class="number">1</span></span><br><span class="line">/usr/bin/amixer -c <span class="number">0</span> cset numid=<span class="number">14</span> off</span><br></pre></td></tr></table></figure>
<p>编辑/etc/asound.conf</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/asound.conf &gt;/dev/<span class="literal">null</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment"># the sound card</span></span><br><span class="line">pcm.real &#123;</span><br><span class="line">   <span class="built_in"> type </span>hw</span><br><span class="line">    card 0</span><br><span class="line">    device 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># software volume</span></span><br><span class="line">pcm.softvol &#123;</span><br><span class="line">   <span class="built_in"> type </span>softvol</span><br><span class="line">    slave.pcm <span class="string">&quot;real&quot;</span></span><br><span class="line">    control &#123;</span><br><span class="line">        name <span class="string">&quot;Software&quot;</span></span><br><span class="line">        card 0</span><br><span class="line">    &#125;</span><br><span class="line">    max_dB 40.0</span><br><span class="line">    min_dB -10.0</span><br><span class="line">    resolution 10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pcm.mic &#123;</span><br><span class="line">   <span class="built_in"> type </span>plug</span><br><span class="line">    slave.pcm <span class="string">&quot;hw:0,0&quot;</span></span><br><span class="line">    slave.format S16_LE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># default device</span></span><br><span class="line">pcm.!default &#123;</span><br><span class="line">   <span class="built_in"> type </span>asym</span><br><span class="line">    playback.pcm <span class="string">&quot;softvol&quot;</span></span><br><span class="line">    capture.pcm <span class="string">&quot;mic&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>接着重启即可，然后测试默认音频输出</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">speaker</span>-test  -c<span class="number">2</span> -twav</span><br></pre></td></tr></table></figure>
<p>此时应该可以听到轻柔的女声，如果不行就放大招————重装alsa</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> <span class="comment">--purge --reinstall install alsa-base alsa-utils</span></span><br></pre></td></tr></table></figure>
<h1 id="配置硬件看门狗"><a href="#配置硬件看门狗" class="headerlink" title="配置硬件看门狗"></a>配置硬件看门狗</h1><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> watchdog</span><br></pre></td></tr></table></figure>
<p><code>/etc/watchdog.conf</code>参考如下</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Defaults compiled into the binary</span></span><br><span class="line"><span class="attr">temperature-sensor</span> = /sys/class/thermal/thermal_zone0/temp</span><br><span class="line"><span class="attr">max-temperature</span>	= <span class="number">85</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Defaults compiled into the binary</span></span><br><span class="line"><span class="attr">admin</span>			= root</span><br><span class="line"><span class="comment">#Allwinner H2+默认的看门狗timeout是16秒，所以每隔15秒喂一次就可以了</span></span><br><span class="line"><span class="attr">interval</span>		= <span class="number">15</span></span><br><span class="line"><span class="attr">logtick</span>                = <span class="number">1</span></span><br><span class="line"><span class="attr">log-dir</span>		= /var/log/watchdog</span><br><span class="line"></span><br><span class="line"><span class="comment"># This greatly decreases the chance that watchdog won&#x27;t be scheduled before</span></span><br><span class="line"><span class="comment"># your machine is really loaded</span></span><br><span class="line"><span class="attr">realtime</span>		= <span class="literal">yes</span></span><br><span class="line"><span class="attr">priority</span>		= <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>接着启用watchdog</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">service<span class="built_in"> watchdog </span>start &amp;&amp; systemctl <span class="builtin-name">enable</span> watchdog</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>OpenWrt上使用AutoSSH建立反向代理</title>
    <url>/2020/03/21/SSH-reverse-tunnel-Openwrt/</url>
    <content><![CDATA[<p>丈母娘想让我解决她们家Wifi信号弱的问题，我决定把家里原来唯一的无线路由器变成纯AP，弱电箱里放一个星际宝盒，另外在客厅放一台K2保证全家的Wifi覆盖。<br>本来路由器这种东西设置好了就不会再动了，可是我还需要解决他们家网络电视的问题，网络电视这种东西，直播源很容易失效，感觉以后会涉及到远程维护了。<br>我之前写过<a href="/2019/10/10/SSH-reverse-tunnel/" title="Ubuntu下用Autossh建立反向连接">Ubuntu下用Autossh建立反向连接</a>的博文，现在想照搬到OpenWrt上。但是OpenWrt上是用Dropbear作为SSH工具，与OpenSSH有些许不同，记录一下过程。</p>
<a id="more"></a>
<h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><ul>
<li>公网服务器A 开放端口5680(转发ssh连接)，开放端口5681(监听连接状态)，开放端口22，用OpenSSH做SSH服务器</li>
<li>内网机器B OpenWrt with Dropbear</li>
</ul>
<h1 id="修改公网服务器A的SSH配置文件-etc-ssh-sshd-config"><a href="#修改公网服务器A的SSH配置文件-etc-ssh-sshd-config" class="headerlink" title="修改公网服务器A的SSH配置文件/etc/ssh/sshd_config"></a>修改公网服务器A的SSH配置文件<code>/etc/ssh/sshd_config</code></h1><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">GatewayPorts</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<p>这样可以把监听的端口绑定到任意IP 0.0.0.0上，否则只有本机127.0.0.1可以访问。<br>记得重启SSH服务器</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>restart sshd</span><br></pre></td></tr></table></figure>
<h1 id="用内网B机器保存公网服务器A的密钥，以便免密连接"><a href="#用内网B机器保存公网服务器A的密钥，以便免密连接" class="headerlink" title="用内网B机器保存公网服务器A的密钥，以便免密连接"></a>用内网B机器保存公网服务器A的密钥，以便免密连接</h1><p>这里就跟OpenSSH不一样了，因为Dropbear没有ssh-id-copy这个命令，而Dropbear的private key又不是以明文方式存储的。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#You can get the key using</span></span><br><span class="line">dropbearkey -y -f <span class="regexp">/etc/</span>dropbear<span class="regexp">/dropbear_rsa_host_key | grep &quot;^ssh-rsa &quot; &gt; /</span>etc<span class="regexp">/dropbear/</span>authorized_keys</span><br></pre></td></tr></table></figure>
<p>然后将key从authorized_keys复制添加到到公网服务器的~/.ssh/authorized_keys中</p>
<h1 id="在内网B机器上尝试建立反向代理"><a href="#在内网B机器上尝试建立反向代理" class="headerlink" title="在内网B机器上尝试建立反向代理"></a>在内网B机器上尝试建立反向代理</h1><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#注意Dropbear在建立SSH连接时不会自己带着私钥，需要指定</span><br><span class="line">ssh -NR <span class="number">5678</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">22</span> 公网服务器A的用户名@公网服务器A的IP -i /etc/dropbear/dropbear_rsa_host_key</span><br></pre></td></tr></table></figure>
<p>正常情况下，不用输入密码，通道即建立成功。 </p>
<ul>
<li>-N：只建立连接，不打开shell  </li>
<li>-R：指定端口映射  </li>
</ul>
<h1 id="AutoSSH-自动重连"><a href="#AutoSSH-自动重连" class="headerlink" title="AutoSSH 自动重连"></a>AutoSSH 自动重连</h1><p>使用SSH的方式不够稳定，使用AutoSSH可以自动在连接断开时自动重连，再把AutoSSH加入系统服务自动启动，则可以做到稳定的连接。</p>
<h2 id="安装AutoSSH"><a href="#安装AutoSSH" class="headerlink" title="安装AutoSSH"></a>安装AutoSSH</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">opkg install <span class="built_in">auto</span>ssh</span><br></pre></td></tr></table></figure>
<h2 id="将AutoSSH添加到开机自启"><a href="#将AutoSSH添加到开机自启" class="headerlink" title="将AutoSSH添加到开机自启"></a>将AutoSSH添加到开机自启</h2><p>注意在OpenWrt里，官方的autossh早就给你准备好了 <code>/etc/init.d/autossh</code> 文件，你只需要在<code>/etc/config/autossh</code>中修改参数即可，下面贴出我的配置</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">config autossh</span><br><span class="line">        <span class="keyword">option</span> ssh <span class="string">&#x27;-i /etc/dropbear/dropbear_rsa_host_key -N -T -R 5680:localhost:22 root@kexie.party&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> gatetime <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> monitorport <span class="string">&#x27;5681&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> poll <span class="string">&#x27;180&#x27;</span></span><br><span class="line">        <span class="keyword">option</span> enabled <span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure>
<p>然后开机启动Autossh<br><code>/etc/init.d/autossh enable</code></p>
]]></content>
  </entry>
  <entry>
    <title>用AutoSSH建立SSH反向隧道</title>
    <url>/2019/10/10/SSH-reverse-tunnel/</url>
    <content><![CDATA[<ul>
<li>公网服务器A 开放端口5678(转发ssh连接)，开放端口5679(监听连接状态)，开放端口22</li>
<li>内网机器B Ubuntu18.04  </li>
</ul>
<p>建立公网服务器A到内网机器B的SSH反向代理，将连接到公网服务器A 5678端口的SSH请求转发给内网机器B的22端口</p>
<a id="more"></a>

<h2 id="修改公网服务器A的SSH配置文件-etc-ssh-sshd-config"><a href="#修改公网服务器A的SSH配置文件-etc-ssh-sshd-config" class="headerlink" title="修改公网服务器A的SSH配置文件/etc/ssh/sshd_config"></a>修改公网服务器A的SSH配置文件<code>/etc/ssh/sshd_config</code></h2><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">GatewayPorts</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<p>这样可以把监听的端口绑定到任意IP 0.0.0.0上，否则只有本机127.0.0.1可以访问。<br>记得重启SSH服务器</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>restart sshd</span><br></pre></td></tr></table></figure>
<h2 id="用内网B机器保存公网服务器A的密钥，以便免密连接"><a href="#用内网B机器保存公网服务器A的密钥，以便免密连接" class="headerlink" title="用内网B机器保存公网服务器A的密钥，以便免密连接"></a>用内网B机器保存公网服务器A的密钥，以便免密连接</h2><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">ssh-<span class="keyword">copy</span>-<span class="built_in">id</span> [公网服务器A的用户名]@[公网服务器A的IP]</span><br></pre></td></tr></table></figure>
<h2 id="在内网B机器上尝试建立反向代理"><a href="#在内网B机器上尝试建立反向代理" class="headerlink" title="在内网B机器上尝试建立反向代理"></a>在内网B机器上尝试建立反向代理</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ssh -NR <span class="number">5678</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">22</span> 公网服务器A的用户名@公网服务器A的IP</span><br></pre></td></tr></table></figure>
<p>正常情况下，不用输入密码，通道即建立成功。 </p>
<ul>
<li>-N：只建立连接，不打开shell  </li>
<li>-R：指定端口映射  </li>
</ul>
<h1 id="AutoSSH-自动重连"><a href="#AutoSSH-自动重连" class="headerlink" title="AutoSSH 自动重连"></a>AutoSSH 自动重连</h1><p>使用SSH的方式不够稳定，使用AutoSSH可以自动在连接断开时自动重连，再把AutoSSH加入系统服务自动启动，则可以做到稳定的连接。</p>
<h2 id="安装AutoSSH"><a href="#安装AutoSSH" class="headerlink" title="安装AutoSSH"></a>安装AutoSSH</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install -y autossh</span><br></pre></td></tr></table></figure>
<h2 id="将AutoSSH添加到开机自启"><a href="#将AutoSSH添加到开机自启" class="headerlink" title="将AutoSSH添加到开机自启"></a>将AutoSSH添加到开机自启</h2><p>需要创建一个 <code>/etc/systemd/system/autossh.service</code> 文件</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo tee /etc/systemd/system/autossh.service &gt;/dev/<span class="literal">null</span> &lt;&lt;<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">[Unit]</span><br><span class="line"><span class="attribute">Description</span>=AutoSSH<span class="built_in"> service </span><span class="keyword">for</span> remote tunnel</span><br><span class="line"><span class="attribute">After</span>=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"><span class="attribute">User</span>=内网机器B的用户名</span><br><span class="line"><span class="attribute">ExecStart</span>=/usr/bin/autossh -M 5679 -N -o <span class="string">&quot;StrictHostKeyChecking=false&quot;</span> -o <span class="string">&quot;ServerAliveInterval 60&quot;</span> -o <span class="string">&quot;ServerAliveCountMax 3&quot;</span> -R 5678:localhost:22 公网服务器A的用户名@公网服务A的IP</span><br><span class="line"><span class="attribute">Restart</span>=always</span><br><span class="line"><span class="attribute">RestartSec</span>=3</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"><span class="attribute">WantedBy</span>=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>将AutoSSH交给Systemd托管，设置立即启动并下次开机自启</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">sudo<span class="keyword"> system</span>ctl daemon-reload &amp;&amp; sudo<span class="keyword"> system</span>ctl start autossh &amp;&amp; sudo<span class="keyword"> system</span>ctl enable autossh.service</span><br></pre></td></tr></table></figure>
<p>autossh相关参数说明</p>
<ul>
<li>-M: 5679 选项指定中继服务器上的监视端口，用于交换监视 SSH 会话的测试数据，需要保证该端口在服务器上未被占用。 </li>
<li>-o: 用于设置 autossh 参数。 </li>
<li>-f:指定 autossh 在后台运行，并不会传给 ssh。和 ssh 的 -f 不一样，autossh 指定 -f 时将无法寻求密码。指定 -f 时，会将环境变量 AUTOSSH_GATETIME 覆盖为 0！ </li>
<li>-N：只建立连接，不打开shell   </li>
<li>-R：指定端口映射  </li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Trojan+Nginx实现HTTP+TLS伪装代理</title>
    <url>/2020/02/28/Trojan/</url>
    <content><![CDATA[<p>我之前写过<a href="/2019/12/08/V2ray/" title="V2ray+Nginx实现WebSocket+TLS伪装代理">V2ray+Nginx实现WebSocket+TLS伪装代理</a>的博文，用了几个月，效果不错的。本来不准备更换方案，但是我发现MT7621主控的路由器跑V2ray最高就8Mbps左右的速度，电脑上可以跑到30Mbps。很明显路由器成为了瓶颈。相对于Golang写的V2ray，用C写的Trojan明显应该可以消耗更少的资源，于是有了更换Trojan的想法。</p>
<a id="more"></a>
<h1 id="安装Trojan和Nginx"><a href="#安装Trojan和Nginx" class="headerlink" title="安装Trojan和Nginx"></a>安装Trojan和Nginx</h1><p>参考以下两个链接分别安装Nginx和Trojan，其中Trojan是在客户端和在服务器上都要安装的，跟SS不同，Trojan服务端和客户端是一体的。Nginx只需服务器安装就可以了。<br> <a target="_blank" rel="noopener" href="https://github.com/trojan-gfw/trojan-quickstart">Trojan官方Linux下安装指南</a><br>我之前写过<a href="/2019/10/26/Nginx-FancyIndex/" title="编译安装和配置Nginx">编译安装和配置Nginx</a>的博文</p>
<h1 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h1><p>网上所有的方案就是让Trojan监听443端口，然后将识别出的正常网页流量转发到Nginx，这样无疑会降低访问正常网页的速度。但是想想我的网站也没多少访问量，而且这样应该会提升科学上网的速度，符合我的初衷，于是就开干了。<br>Nginx配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">user</span>  <span class="string">root;</span></span><br><span class="line"><span class="attr">worker_processes</span>  <span class="string">2;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid</span>        <span class="string">/var/run/nginx.pid;</span></span><br><span class="line"><span class="attr">error_log</span> <span class="string">/var/log/nginx_error.log;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">events</span> <span class="string">&#123;</span></span><br><span class="line">	<span class="attr">use</span> <span class="string">epoll;</span></span><br><span class="line">	<span class="attr">worker_connections</span>  <span class="string">1024;</span></span><br><span class="line">	<span class="attr">multi_accept</span> <span class="string">on;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">http</span> <span class="string">&#123;</span></span><br><span class="line">	<span class="attr">include</span>       <span class="string">mime.types;</span></span><br><span class="line">	<span class="attr">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line">	<span class="attr">charset</span> <span class="string">utf-8;</span></span><br><span class="line">	<span class="attr">sendfile</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">tcp_nopush</span>     <span class="string">on;</span></span><br><span class="line">	<span class="attr">tcp_nodelay</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">keepalive_timeout</span>  <span class="string">60;</span></span><br><span class="line">	<span class="attr">client_header_buffer_size</span> <span class="string">4k;</span></span><br><span class="line">	<span class="attr">open_file_cache</span> <span class="string">max=102400 inactive=20s;</span></span><br><span class="line">	<span class="attr">open_file_cache_valid</span> <span class="string">30s;</span></span><br><span class="line">	<span class="attr">open_file_cache_min_uses</span> <span class="string">1;</span></span><br><span class="line">	<span class="attr">client_header_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">client_body_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">reset_timedout_connection</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">send_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">gzip</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">gzip_disable</span> <span class="string">&quot;msie6&quot;;</span></span><br><span class="line">	<span class="attr">gzip_vary</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">gzip_proxied</span> <span class="string">any;</span></span><br><span class="line">	<span class="attr">gzip_comp_level</span> <span class="string">3;</span></span><br><span class="line">	<span class="attr">gzip_buffers</span> <span class="string">16 8k;</span></span><br><span class="line">	<span class="attr">gzip_http_version</span> <span class="string">1.1;</span></span><br><span class="line">	<span class="attr">gzip_types</span> <span class="string">text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</span></span><br><span class="line">	<span class="attr">server_tokens</span> <span class="string">off;</span></span><br><span class="line">	<span class="attr">access_log</span>  <span class="string">/var/log/nginx_access.log;</span></span><br><span class="line"></span><br><span class="line">	<span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line"><span class="comment">#		listen      443 ssl;</span></span><br><span class="line">		<span class="attr">listen</span>      <span class="string">0.0.0.0:80;</span></span><br><span class="line">		<span class="attr">server_name</span>  <span class="string">weiyangbo.com www.weiyangbo.com; #此处填你网站的域名</span></span><br><span class="line"><span class="comment">		#让Nginx让出443端口，只监听80,ssl设置也不需要了，一切交给Trojan</span></span><br><span class="line"><span class="comment">#		ssl_certificate /etc/nginx/cert/xxxxxxx.pem;</span></span><br><span class="line"><span class="comment">#		ssl_certificate_key /etc/nginx/cert/xxxxxxx.key;</span></span><br><span class="line"><span class="comment">#		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span><br><span class="line"><span class="comment">#		ssl_prefer_server_ciphers on;</span></span><br><span class="line"><span class="comment">#		ssl_session_timeout 5m;</span></span><br><span class="line"><span class="comment">#		ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class="line">		<span class="attr">root</span> <span class="string">/www; #此处填你的网站目录</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">/ &#123;</span></span><br><span class="line">			<span class="attr">expires</span> <span class="string">10h;</span></span><br><span class="line">			<span class="attr">fancyindex</span> <span class="string">on;</span></span><br><span class="line">			<span class="attr">fancyindex_exact_size</span> <span class="string">off;</span></span><br><span class="line">			<span class="attr">fancyindex_localtime</span> <span class="string">on;</span></span><br><span class="line">			<span class="attr">fancyindex_header</span> <span class="string">&quot;/fancyindex/header.html&quot;;</span></span><br><span class="line">			<span class="attr">fancyindex_footer</span> <span class="string">&quot;/fancyindex/footer.html&quot;;</span></span><br><span class="line">			<span class="attr">fancyindex_ignore</span> <span class="string">&quot;fancyindex&quot; &quot;Download&quot;;  #可以自定义文件服务器中不显示的文件或文件夹</span></span><br><span class="line">			<span class="attr">fancyindex_name_length</span> <span class="string">500;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line"><span class="comment">		#这是防盗链设置</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">~*  ^.+\.(jpg|gif|png|img|apk|tar.gz|wmv|jpeg|mp3|mp4|zip|rar)$ &#123;</span></span><br><span class="line">			<span class="attr">valid_referers</span> <span class="string">none blocked www.weiyangbo.com weiyangbo.com;</span></span><br><span class="line">			<span class="attr">if</span> <span class="string">($invalid_referer)&#123;</span></span><br><span class="line">				<span class="attr">return</span> <span class="string">403;</span></span><br><span class="line">				<span class="attr">break;</span></span><br><span class="line">			<span class="attr">&#125;</span></span><br><span class="line">			<span class="attr">access_log</span> <span class="string">off;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line">	<span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure>
<p>Nginx配置写完之后可以用<code>nginx -t</code>命令检查一下Nginx的配置文件有没有语法错误。然后<code>nginx -s reload</code>重启Nginx。</p>
<p>还有Trojan的服务端配置，默认在<code>/usr/local/etc/trojan/config.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;run_type&quot;</span>: <span class="string">&quot;server&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_addr&quot;</span>: <span class="string">&quot;0.0.0.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;local_port&quot;</span>: <span class="number">443</span>,</span><br><span class="line">    <span class="attr">&quot;remote_addr&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;remote_port&quot;</span>: <span class="number">80</span>,</span><br><span class="line">    <span class="attr">&quot;password&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;填你的密码&quot;</span>,</span><br><span class="line">        <span class="string">&quot;可以填多个&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;log_level&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;ssl&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;cert&quot;</span>: <span class="string">&quot;/etc/nginx/cert/xxxxxxx.pem&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;key&quot;</span>: <span class="string">&quot;/etc/nginx/cert/xxxxxxx.key&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;key_password&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cipher&quot;</span>: <span class="string">&quot;ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;cipher_tls13&quot;</span>: <span class="string">&quot;TLS_AES_128_GCM_SHA256:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;prefer_server_cipher&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;alpn&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;http/1.1&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;reuse_session&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;session_ticket&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;session_timeout&quot;</span>: <span class="number">600</span>,</span><br><span class="line">        <span class="attr">&quot;plain_http_response&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;curves&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;dhparam&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;tcp&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;prefer_ipv4&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;no_delay&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;keep_alive&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;reuse_port&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;fast_open&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;fast_open_qlen&quot;</span>: <span class="number">20</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;mysql&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">&quot;server_addr&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;server_port&quot;</span>: <span class="number">3306</span>,</span><br><span class="line">        <span class="attr">&quot;database&quot;</span>: <span class="string">&quot;trojan&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;username&quot;</span>: <span class="string">&quot;trojan&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;password&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>确认配置文件填好之后，可以尝试启动Trojan<br><code>sudo systemctl start trojan</code><br>如果没有报错应该是启动成功了，也可以<code>sudo systemctl status trojan</code>检查一下。<br>测试没有问题就可以加入开机自启了<br><code>sudo systemctl enable trojan</code></p>
<h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>略</p>
<h1 id="总结与后记"><a href="#总结与后记" class="headerlink" title="总结与后记"></a>总结与后记</h1><p>测试下来非常失望，在路由器上科学上网的的速度仅仅比V2ray好上一点点，原来正常网页的访问速度却是明显降低了。<del>可能是我路由器真的该淘汰了。</del>后来进一步测试发现是由于路由器上开起了BBR拥塞算法导致的，取消之后立马可以跑到30Mbps（服务器上限）。</p>
]]></content>
  </entry>
  <entry>
    <title>Ubuntu优化指南</title>
    <url>/2019/10/10/Ubuntu_optimization/</url>
    <content><![CDATA[<p>记录一下Ubuntu系统安装完成后的一些自定义设置</p>
<a id="more"></a>
<h1 id="解决与Windows双系统时时区问题"><a href="#解决与Windows双系统时时区问题" class="headerlink" title="解决与Windows双系统时时区问题"></a>解决与Windows双系统时时区问题</h1><p>先保证Ubuntu下的时间是北京时间</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">sudo</span> <span class="comment">hwclock</span> --<span class="comment">localtime</span> --<span class="comment">systohc</span></span><br></pre></td></tr></table></figure>
<p>问题解决</p>
<h1 id="自定义Vi编辑器"><a href="#自定义Vi编辑器" class="headerlink" title="自定义Vi编辑器"></a>自定义Vi编辑器</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo nano <span class="regexp">/etc/</span>vim/vimrc</span><br></pre></td></tr></table></figure>
<p>添加如下</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="comment">&quot;语法高亮</span></span><br><span class="line"><span class="comment">&quot;syntax on</span></span><br><span class="line"><span class="comment">&quot;显示行号</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">nu</span></span><br><span class="line"><span class="comment">&quot;修改默认注释颜色</span></span><br><span class="line"><span class="keyword">hi</span> Comment ctermfg=DarkCyan</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> nocompatible</span><br><span class="line"><span class="comment">&quot;允许退格键删除</span></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span></span><br><span class="line"><span class="comment">&quot;启用鼠标</span></span><br><span class="line"><span class="comment">&quot;set mouse=a</span></span><br><span class="line"><span class="comment">&quot;set selection=exclusive</span></span><br><span class="line"><span class="comment">&quot;set selectmode=mouse,key</span></span><br><span class="line"><span class="comment">&quot;侦测文件类型</span></span><br><span class="line"><span class="keyword">filetype</span> <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot;载入文件类型插件</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot;为特定文件类型载入相关缩进文件</span></span><br><span class="line"><span class="keyword">filetype</span> <span class="built_in">indent</span> <span class="keyword">on</span></span><br><span class="line"><span class="comment">&quot;设置编码自动识别, 中文引号显示</span></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,gbk</span><br><span class="line"><span class="comment">&quot;set encoding=euc-cn</span></span><br><span class="line"><span class="keyword">set</span> ambiwidth=double</span><br><span class="line"><span class="comment">&quot;设置高亮搜索</span></span><br><span class="line"><span class="keyword">set</span> hlsearch</span><br><span class="line"><span class="comment">&quot;在搜索时，输入的词句的逐字符高亮</span></span><br><span class="line"><span class="keyword">set</span> incsearch</span><br><span class="line"><span class="comment">&quot;按C语言格式缩进</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">cindent</span></span><br><span class="line"><span class="comment">&quot;设置Tab长度为4格</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="comment">&quot;设置自动缩进长度为4格</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"><span class="comment">&quot;继承前一行的缩进方式，特别适用于多行注释</span></span><br><span class="line"><span class="comment">&quot;set autoindent</span></span><br><span class="line"><span class="comment">&quot;显示括号匹配</span></span><br><span class="line"><span class="keyword">set</span> showmatch</span><br><span class="line"><span class="comment">&quot;括号匹配显示时间为1(单位是十分之一秒)</span></span><br><span class="line"><span class="keyword">set</span> matchtime=<span class="number">1</span></span><br><span class="line"><span class="comment">&quot;增强模式中的命令行自动完成操作</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"><span class="comment">&quot;不要生成swap文件，当buffer被丢弃的时候隐藏它</span></span><br><span class="line"><span class="keyword">setlocal</span> noswapfile</span><br><span class="line"><span class="keyword">set</span> bufhidden=<span class="keyword">hide</span></span><br></pre></td></tr></table></figure>

<h1 id="etc-sysctl-conf"><a href="#etc-sysctl-conf" class="headerlink" title="/etc/sysctl.conf"></a>/etc/sysctl.conf</h1><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>sysctl.conf</span><br></pre></td></tr></table></figure>
<p>按照如下方式修改</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#swappiness</span></span><br><span class="line"><span class="attr">vm.swappiness</span>=<span class="number">0</span></span><br><span class="line"><span class="comment"># max open files</span></span><br><span class="line"><span class="attr">fs.file-max</span> = <span class="number">51200</span></span><br><span class="line"><span class="comment"># max read buffer</span></span><br><span class="line"><span class="attr">net.core.rmem_max</span> = <span class="number">67108864</span></span><br><span class="line"><span class="comment"># max write buffer</span></span><br><span class="line"><span class="attr">net.core.wmem_max</span> = <span class="number">67108864</span></span><br><span class="line"><span class="comment"># default read buffer</span></span><br><span class="line"><span class="attr">net.core.rmem_default</span> = <span class="number">65536</span></span><br><span class="line"><span class="comment"># default write buffer</span></span><br><span class="line"><span class="attr">net.core.wmem_default</span> = <span class="number">65536</span></span><br><span class="line"><span class="comment"># max processor input queue</span></span><br><span class="line"><span class="attr">net.core.netdev_max_backlog</span> = <span class="number">4096</span></span><br><span class="line"><span class="comment"># max backlog</span></span><br><span class="line"><span class="attr">net.core.somaxconn</span> = <span class="number">4096</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># resist SYN flood attacks</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_syncookies</span> = <span class="number">1</span></span><br><span class="line"><span class="comment"># reuse timewait sockets when safe</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_tw_reuse</span> = <span class="number">1</span></span><br><span class="line"><span class="comment"># turn off fast timewait sockets recycling</span></span><br><span class="line"><span class="comment">#net.ipv4.tcp_tw_recycle = 0</span></span><br><span class="line"><span class="comment"># short FIN timeout</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_fin_timeout</span> = <span class="number">30</span></span><br><span class="line"><span class="comment"># short keepalive time</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_keepalive_time</span> = <span class="number">1200</span></span><br><span class="line"><span class="comment"># outbound port range</span></span><br><span class="line"><span class="attr">net.ipv4.ip_local_port_range</span> = <span class="number">10000</span> <span class="number">65000</span></span><br><span class="line"><span class="comment"># max SYN backlog</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_max_syn_backlog</span> = <span class="number">4096</span></span><br><span class="line"><span class="comment"># max timewait sockets held by system simultaneously</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_max_tw_buckets</span> = <span class="number">5000</span></span><br><span class="line"><span class="comment"># turn on TCP Fast Open on both client and server side</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_fastopen</span> = <span class="number">3</span></span><br><span class="line"><span class="comment"># TCP receive buffer</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_rmem</span> = <span class="number">4096</span> <span class="number">87380</span> <span class="number">67108864</span></span><br><span class="line"><span class="comment"># TCP write buffer</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_wmem</span> = <span class="number">4096</span> <span class="number">65536</span> <span class="number">67108864</span></span><br><span class="line"><span class="comment"># turn on path MTU discovery</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_mtu_probing</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for high-latency network</span></span><br><span class="line"><span class="comment">#net.ipv4.tcp_congestion_control = hybla</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for low-latency network, use cubic instead</span></span><br><span class="line"><span class="comment"># net.ipv4.tcp_congestion_control = cubic</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#for kernel version &gt;= 4.9</span></span><br><span class="line"><span class="attr">net.core.default_qdisc</span>=fq</span><br><span class="line"><span class="attr">net.ipv4.tcp_congestion_control</span>=bbr</span><br></pre></td></tr></table></figure>

<h1 id="开启rc-local支持"><a href="#开启rc-local支持" class="headerlink" title="开启rc.local支持"></a>开启rc.local支持</h1><h2 id="1-开启服务之前，要首先添加-Install-域"><a href="#1-开启服务之前，要首先添加-Install-域" class="headerlink" title="1.开启服务之前，要首先添加[Install]域"></a>1.开启服务之前，要首先添加[Install]域</h2><p>方法一(懒人法)：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">echo -e <span class="string">&quot;\n\n[Install]\nWantedBy=multi-user.target\nAlias=rc-local.service&quot;</span> | sudo tee -a <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>rc-local.service</span><br></pre></td></tr></table></figure>
<p>方法二(手动添加)：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>systemd<span class="regexp">/system/</span>rc-local.service</span><br></pre></td></tr></table></figure>
<p>在末尾添加如下内容  </p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br><span class="line"><span class="attr">Alias</span>=rc-local.service</span><br></pre></td></tr></table></figure>

<h2 id="2-设置rc-local服务开启"><a href="#2-设置rc-local服务开启" class="headerlink" title="2.设置rc.local服务开启"></a>2.设置rc.local服务开启</h2><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="keyword">enable</span> rc-<span class="keyword">local</span></span><br></pre></td></tr></table></figure>

<h2 id="3-接下来就创建属于我们的-etc-rc-local脚本吧"><a href="#3-接下来就创建属于我们的-etc-rc-local脚本吧" class="headerlink" title="3.接下来就创建属于我们的/etc/rc.local脚本吧"></a>3.接下来就创建属于我们的/etc/rc.local脚本吧</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">sudo touch <span class="regexp">/etc/</span>rc.local</span><br><span class="line">chmod <span class="number">755</span> <span class="regexp">/etc/</span>rc.local</span><br><span class="line">sudo echo <span class="string">&quot;#!/bin/bash&quot;</span> &gt; <span class="regexp">/etc/</span>rc.local</span><br><span class="line">sudo vi <span class="regexp">/etc/</span>rc.local</span><br></pre></td></tr></table></figure>

<h1 id="设置SWAP"><a href="#设置SWAP" class="headerlink" title="设置SWAP"></a>设置SWAP</h1><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">sudo</span> <span class="string">fallocate -l 8G /swapfile</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">mkswap  /swapfile</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">chmod 600  /swapfile</span></span><br><span class="line"><span class="attr">sudo</span> <span class="string">swapon /swapfile</span></span><br><span class="line"><span class="attr">swapon</span>  <span class="string">-s</span></span><br></pre></td></tr></table></figure>
<p>加入fstab以便永久生效</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">echo -e <span class="string">&quot;\n/swapfile swap swap defaults 0 0&quot;</span> | sudo tee -a <span class="regexp">/etc/</span>fstab</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>V2ray+Nginx实现WebSocket+TLS伪装代理</title>
    <url>/2019/12/08/V2ray/</url>
    <content><![CDATA[<p>相比于SS，V2ray设置太麻烦了，对于移动端来说太耗电，对于硬路由来说性能开销太大。但是现在要干扰SS实在太简单，所以不得不未雨绸缪了。花了很大的功夫才利用V2ray+Nginx配置好WebSocket+TLS，同时不影响原来的网站。将V2ray藏在Nginx后面，使用 TLS 加密流量，看起来更像HTTPS。<br> <a id="more"></a></p>
<h1 id="安装V2ray和Nginx"><a href="#安装V2ray和Nginx" class="headerlink" title="安装V2ray和Nginx"></a>安装V2ray和Nginx</h1><p>参考以下两个链接分别安装Nginx和V2ray，其中V2ray是在客户端和服务器上都要安装的，跟SS不同，V2ray不分服务端和客户端。Nginx只需服务器安装就可以了。<br> <a target="_blank" rel="noopener" href="https://toutyrater.github.io/prep/install.html">V2ray官方Linux下安装指南</a><br>我之前写过<a href="/2019/10/26/Nginx-FancyIndex/" title="编译安装和配置Nginx">编译安装和配置Nginx</a>的博文</p>
<h1 id="服务端设置"><a href="#服务端设置" class="headerlink" title="服务端设置"></a>服务端设置</h1><p>官方的教程说得已经很清楚了，Nginx的配置和V2ray的配置都提到了，可以先做个参考 <a target="_blank" rel="noopener" href="https://toutyrater.github.io/advanced/wss_and_web.html#websockettlsweb">V2ray官方白话文配置教程</a><br>服务器上的配置我跟官方差不多，直接贴出配置。<br>Nginx配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">user</span>  <span class="string">root;</span></span><br><span class="line"><span class="attr">worker_processes</span>  <span class="string">2;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid</span>        <span class="string">/var/run/nginx.pid;</span></span><br><span class="line"><span class="attr">error_log</span> <span class="string">/var/log/nginx_error.log;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">events</span> <span class="string">&#123;</span></span><br><span class="line">	<span class="attr">use</span> <span class="string">epoll;</span></span><br><span class="line">	<span class="attr">worker_connections</span>  <span class="string">1024;</span></span><br><span class="line">	<span class="attr">multi_accept</span> <span class="string">on;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">http</span> <span class="string">&#123;</span></span><br><span class="line">	<span class="attr">include</span>       <span class="string">mime.types;</span></span><br><span class="line">	<span class="attr">default_type</span>  <span class="string">application/octet-stream;</span></span><br><span class="line">	<span class="attr">charset</span> <span class="string">utf-8;</span></span><br><span class="line">	<span class="attr">sendfile</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">tcp_nopush</span>     <span class="string">on;</span></span><br><span class="line">	<span class="attr">tcp_nodelay</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">keepalive_timeout</span>  <span class="string">60;</span></span><br><span class="line">	<span class="attr">client_header_buffer_size</span> <span class="string">4k;</span></span><br><span class="line">	<span class="attr">open_file_cache</span> <span class="string">max=102400 inactive=20s;</span></span><br><span class="line">	<span class="attr">open_file_cache_valid</span> <span class="string">30s;</span></span><br><span class="line">	<span class="attr">open_file_cache_min_uses</span> <span class="string">1;</span></span><br><span class="line">	<span class="attr">client_header_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">client_body_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">reset_timedout_connection</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">send_timeout</span> <span class="string">15;</span></span><br><span class="line">	<span class="attr">gzip</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">gzip_disable</span> <span class="string">&quot;msie6&quot;;</span></span><br><span class="line">	<span class="attr">gzip_vary</span> <span class="string">on;</span></span><br><span class="line">	<span class="attr">gzip_proxied</span> <span class="string">any;</span></span><br><span class="line">	<span class="attr">gzip_comp_level</span> <span class="string">3;</span></span><br><span class="line">	<span class="attr">gzip_buffers</span> <span class="string">16 8k;</span></span><br><span class="line">	<span class="attr">gzip_http_version</span> <span class="string">1.1;</span></span><br><span class="line">	<span class="attr">gzip_types</span> <span class="string">text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;</span></span><br><span class="line">	<span class="attr">server_tokens</span> <span class="string">off;</span></span><br><span class="line">	<span class="attr">access_log</span>  <span class="string">/var/log/nginx_access.log;</span></span><br><span class="line"></span><br><span class="line">	<span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">		<span class="attr">listen</span>      <span class="string">443 ssl;</span></span><br><span class="line">		<span class="attr">server_name</span>  <span class="string">weiyangbo.com www.weiyangbo.com; #此处填你网站的域名</span></span><br><span class="line"><span class="comment">		#下面两行是你的ssl证书的路径</span></span><br><span class="line">		<span class="attr">ssl_certificate</span> <span class="string">/etc/nginx/cert/xxxxxxx.pem;</span></span><br><span class="line">		<span class="attr">ssl_certificate_key</span> <span class="string">/etc/nginx/cert/xxxxxxx.key;</span></span><br><span class="line">		<span class="attr">ssl_protocols</span> <span class="string">TLSv1 TLSv1.1 TLSv1.2;</span></span><br><span class="line">		<span class="attr">ssl_prefer_server_ciphers</span> <span class="string">on;</span></span><br><span class="line">		<span class="attr">ssl_session_timeout</span> <span class="string">5m;</span></span><br><span class="line">		<span class="attr">ssl_ciphers</span>  <span class="string">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class="line">		<span class="attr">root</span> <span class="string">/www; #此处填你的网站目录</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">/ &#123;</span></span><br><span class="line">			<span class="attr">expires</span> <span class="string">10h;</span></span><br><span class="line">			<span class="attr">fancyindex</span> <span class="string">on;</span></span><br><span class="line">			<span class="attr">fancyindex_exact_size</span> <span class="string">off;</span></span><br><span class="line">			<span class="attr">fancyindex_localtime</span> <span class="string">on;</span></span><br><span class="line">			<span class="attr">fancyindex_header</span> <span class="string">&quot;/fancyindex/header.html&quot;;</span></span><br><span class="line">			<span class="attr">fancyindex_footer</span> <span class="string">&quot;/fancyindex/footer.html&quot;;</span></span><br><span class="line">			<span class="attr">fancyindex_ignore</span> <span class="string">&quot;fancyindex&quot; &quot;Download&quot;;  #可以自定义文件服务器中不显示的文件或文件夹</span></span><br><span class="line">			<span class="attr">fancyindex_name_length</span> <span class="string">500;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line"><span class="comment">		#这是防盗链设置</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">~*  ^.+\.(jpg|gif|png|img|apk|tar.gz|wmv|jpeg|mp3|mp4|zip|rar)$ &#123;</span></span><br><span class="line">			<span class="attr">valid_referers</span> <span class="string">none blocked www.weiyangbo.com weiyangbo.com;</span></span><br><span class="line">			<span class="attr">if</span> <span class="string">($invalid_referer)&#123;</span></span><br><span class="line">				<span class="attr">return</span> <span class="string">403;</span></span><br><span class="line">				<span class="attr">break;</span></span><br><span class="line">			<span class="attr">&#125;</span></span><br><span class="line">			<span class="attr">access_log</span> <span class="string">off;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line">		<span class="attr">location</span> <span class="string">/v2ray/ &#123; #这一段就是用于V2ray的反向代理</span></span><br><span class="line">			<span class="attr">proxy_redirect</span> <span class="string">off;</span></span><br><span class="line">			<span class="attr">proxy_pass</span> <span class="string">http://127.0.0.1:10000;</span></span><br><span class="line">			<span class="attr">proxy_http_version</span> <span class="string">1.1;</span></span><br><span class="line">			<span class="attr">proxy_set_header</span> <span class="string">Upgrade $http_upgrade;</span></span><br><span class="line">			<span class="attr">proxy_set_header</span> <span class="string">Connection &quot;upgrade&quot;;</span></span><br><span class="line">			<span class="attr">proxy_set_header</span> <span class="string">Host $http_host;</span></span><br><span class="line">		<span class="attr">&#125;</span></span><br><span class="line">	<span class="attr">&#125;</span></span><br><span class="line"><span class="comment">	#重定向80端口的全部http请求去https</span></span><br><span class="line">	<span class="attr">server</span> <span class="string">&#123;</span></span><br><span class="line">		<span class="attr">listen</span> <span class="string">80;</span></span><br><span class="line">		<span class="attr">server_name</span> <span class="string">weiyangbo.com www.weiyangbo.com; #网站域名，跟上面保持一致</span></span><br><span class="line">		<span class="attr">return</span> <span class="string">301 https://$server_name$request_uri;</span></span><br><span class="line">	<span class="attr">&#125;</span></span><br><span class="line"><span class="attr">&#125;</span></span><br></pre></td></tr></table></figure>
<p>Nginx配置写完之后可以用<code>nginx -t</code>命令检查一下Nginx的配置文件有没有语法错误。然后<code>nginx -s reload</code>重启Nginx。<br>还有V2ray的服务端配置，默认在<code>/etc/v2ray/config.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;log&quot;</span> : &#123;</span><br><span class="line">   <span class="attr">&quot;access&quot;</span>: <span class="string">&quot;/var/log/v2ray/access.log&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;error&quot;</span>: <span class="string">&quot;/var/log/v2ray/error.log&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;loglevel&quot;</span>: <span class="string">&quot;warning&quot;</span></span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="attr">&quot;inbound&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;port&quot;</span>: <span class="number">10000</span>,</span><br><span class="line">   <span class="attr">&quot;listen&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;vmess&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;clients&quot;</span>: [</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;8335737e-124e-4935-818a-31501e43c819&quot;</span>,</span><br><span class="line">	  <span class="attr">&quot;alterId&quot;</span>: <span class="number">64</span></span><br><span class="line">	 &#125;</span><br><span class="line">   ]</span><br><span class="line">  &#125;,</span><br><span class="line">   <span class="attr">&quot;streamSettings&quot;</span>:</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;network&quot;</span>: <span class="string">&quot;ws&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;wsSettings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;/v2ray/&quot;</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="attr">&quot;outbound&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;freedom&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;settings&quot;</span>: &#123;&#125;</span><br><span class="line"> &#125;,</span><br><span class="line">  <span class="attr">&quot;outboundDetour&quot;</span>: [</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;blackhole&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">   &#125;,</span><br><span class="line">    <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line"> ],</span><br><span class="line">  <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;strategy&quot;</span>: <span class="string">&quot;rules&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>: [</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;ip&quot;</span>: [</span><br><span class="line">       <span class="string">&quot;0.0.0.0/8&quot;</span>,</span><br><span class="line">       <span class="string">&quot;10.0.0.0/8&quot;</span>,</span><br><span class="line">       <span class="string">&quot;100.64.0.0/10&quot;</span>,</span><br><span class="line">       <span class="string">&quot;127.0.0.0/8&quot;</span>,</span><br><span class="line">       <span class="string">&quot;169.254.0.0/16&quot;</span>,</span><br><span class="line">       <span class="string">&quot;172.16.0.0/12&quot;</span>,</span><br><span class="line">       <span class="string">&quot;192.0.0.0/24&quot;</span>,</span><br><span class="line">       <span class="string">&quot;192.0.2.0/24&quot;</span>,</span><br><span class="line">       <span class="string">&quot;192.168.0.0/16&quot;</span>,</span><br><span class="line">       <span class="string">&quot;198.18.0.0/15&quot;</span>,</span><br><span class="line">       <span class="string">&quot;198.51.100.0/24&quot;</span>,</span><br><span class="line">       <span class="string">&quot;203.0.113.0/24&quot;</span>,</span><br><span class="line">       <span class="string">&quot;::1/128&quot;</span>,</span><br><span class="line">       <span class="string">&quot;fc00::/7&quot;</span>,</span><br><span class="line">       <span class="string">&quot;fe80::/10&quot;</span></span><br><span class="line">     ],</span><br><span class="line">      <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;blocked&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">   ]</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>V2ray配置完之后可以用命令<code>/usr/bin/v2ray/v2ray -test /etc/v2ray/config.json</code>命令检查V2ray的配置文件是否有语法错误。接着用<code>systemctl start v2ray</code>来启动。<br>需要注意的是：<br>1、Nginx配置里面的<code>location</code>字段必须和V2ray中的<code>path</code>一模一样，连“/”也不可以省略。<br>2、Nginx配置里面的<code>proxy_pass</code>后面的端口，必须保持和V2ray中的<code>port</code>一致，同时注意SElinux是否允许Nginx做转发。</p>
<h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>我在官方的基础上做了较大改动，参考了Kitsunebi大神的<a target="_blank" rel="noopener" href="https://medium.com/@TachyonDevel/%E6%BC%AB%E8%B0%88%E5%90%84%E7%A7%8D%E9%BB%91%E7%A7%91%E6%8A%80%E5%BC%8F-dns-%E6%8A%80%E6%9C%AF%E5%9C%A8%E4%BB%A3%E7%90%86%E7%8E%AF%E5%A2%83%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8-62c50e58cbd0">这篇帖子</a>，在客户端实现了自动分流（绕过国内IP）和DNS防投毒。下面直接贴出我的配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;port&quot;</span>: <span class="number">1080</span>,</span><br><span class="line">      <span class="attr">&quot;listen&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;socks&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sniffing&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;destOverride&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;http&quot;</span>,</span><br><span class="line">          <span class="string">&quot;tls&quot;</span></span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;auth&quot;</span>: <span class="string">&quot;noauth&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;udp&quot;</span>: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;vmess&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;vnext&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;weiyangbo.com&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;port&quot;</span>: <span class="number">443</span>,</span><br><span class="line">            <span class="attr">&quot;users&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;8335737e-124e-4935-818a-31501e43c819&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;alterId&quot;</span>: <span class="number">64</span>,</span><br><span class="line">                <span class="attr">&quot;security&quot;</span>: <span class="string">&quot;auto&quot;</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;network&quot;</span>: <span class="string">&quot;ws&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;security&quot;</span>: <span class="string">&quot;tls&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;tlsSettings&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;serverName&quot;</span>: <span class="string">&quot;weiyangbo.com&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;/v2ray/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;proxy&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;freedom&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;domainStrategy&quot;</span>: <span class="string">&quot;UseIP&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;direct&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;blackhole&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;&#125;,</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;block&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;dns&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;dns-out&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;dns&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;clientIp&quot;</span>: <span class="string">&quot;115.239.211.92&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;hosts&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;localhost&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;servers&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;114.114.114.114&quot;</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;8.8.8.8&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;domains&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;google&quot;</span>,</span><br><span class="line">          <span class="string">&quot;android&quot;</span>,</span><br><span class="line">          <span class="string">&quot;fbcdn&quot;</span>,</span><br><span class="line">          <span class="string">&quot;facebook&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:fb.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;instagram&quot;</span>,</span><br><span class="line">          <span class="string">&quot;whatsapp&quot;</span>,</span><br><span class="line">          <span class="string">&quot;akamai&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:line-scdn.net&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:line.me&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:naver.jp&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;port&quot;</span>: <span class="number">53</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;log&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;loglevel&quot;</span>: <span class="string">&quot;warning&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;policy&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;levels&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;0&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;bufferSize&quot;</span>: <span class="number">4096</span>,</span><br><span class="line">        <span class="attr">&quot;connIdle&quot;</span>: <span class="number">30</span>,</span><br><span class="line">        <span class="attr">&quot;downlinkOnly&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;handshake&quot;</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="attr">&quot;uplinkOnly&quot;</span>: <span class="number">0</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;domainStrategy&quot;</span>: <span class="string">&quot;IPIfNonMatch&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;inboundTag&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;tun2socks&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;network&quot;</span>: <span class="string">&quot;udp&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;port&quot;</span>: <span class="number">53</span>,</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;dns-out&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;domain&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;domain:setup.icloud.com&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;proxy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;8.8.8.8/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;8.8.4.4/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;1.1.1.1/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;1.0.0.1/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;9.9.9.9/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;149.112.112.112/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;208.67.222.222/32&quot;</span>,</span><br><span class="line">          <span class="string">&quot;208.67.220.220/32&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;proxy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;geoip:cn&quot;</span>,</span><br><span class="line">          <span class="string">&quot;geoip:private&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;port&quot;</span>: <span class="string">&quot;123&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;domain&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;domain:pstatp.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:snssdk.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:toutiao.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:ixigua.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:apple.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:crashlytics.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:icloud.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;cctv&quot;</span>,</span><br><span class="line">          <span class="string">&quot;umeng&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:weico.cc&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:jd.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:360buy.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:360buyimg.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:douyu.tv&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:douyu.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:douyucdn.cn&quot;</span>,</span><br><span class="line">          <span class="string">&quot;geosite:cn&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;149.154.167.0/24&quot;</span>,</span><br><span class="line">          <span class="string">&quot;149.154.175.0/24&quot;</span>,</span><br><span class="line">          <span class="string">&quot;91.108.56.0/24&quot;</span>,</span><br><span class="line">          <span class="string">&quot;125.209.222.0/24&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;proxy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;domain&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;twitter&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:twimg.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:t.co&quot;</span>,</span><br><span class="line">          <span class="string">&quot;google&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:ggpht.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:gstatic.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:youtube.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:ytimg.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pixiv&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:pximg.net&quot;</span>,</span><br><span class="line">          <span class="string">&quot;tumblr&quot;</span>,</span><br><span class="line">          <span class="string">&quot;instagram&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:line-scdn.net&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:line.me&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:naver.jp&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:facebook.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:fbcdn.net&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pinterest&quot;</span>,</span><br><span class="line">          <span class="string">&quot;github&quot;</span>,</span><br><span class="line">          <span class="string">&quot;dropbox&quot;</span>,</span><br><span class="line">          <span class="string">&quot;netflix&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:medium.com&quot;</span>,</span><br><span class="line">          <span class="string">&quot;domain:fivecdm.com&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;proxy&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;strategy&quot;</span>: <span class="string">&quot;rules&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要注意的是：<br>客户端配置需要注意在<code>outbounds</code>里面的<code>protocol</code>、<code>settings</code>、 <code>streamSettings</code>三个字段下的所有值必须和服务器端一致，不然连不上。不过有一个例外，那就是<code>settings</code>下的<code>security</code>，因为v2ray的加密算法是客户端与服务器协商的，服务器没有强制，客户端可以随意，我这里填的是<code>auto</code>。<br>V2ray配置完之后可以用命令<code>/usr/bin/v2ray/v2ray -test /etc/v2ray/config.json</code>命令检查是否有语法错误。接着用<code>systemctl start v2ray</code>来启动。</p>
<h1 id="使用-amp-测试"><a href="#使用-amp-测试" class="headerlink" title="使用&amp;测试"></a>使用&amp;测试</h1><p>用<code>ps auxw | grep v2ray</code>分别检查服务器和客户端（本地）的v2ray是否正常运行。既可以在网络代理中设置系统代理，也可以在本地终端设置socksv5代理(仅在当前终端有效)：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">http_proxy</span>=<span class="string">&quot;socks5://127.0.0.1:1080&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">https_proxy</span>=<span class="string">&quot;socks5://127.0.0.1:1080&quot;</span></span><br></pre></td></tr></table></figure>
<p>可以用curl检测你当前的访问外网IP</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">curl</span> <span class="built_in">ip</span>.sb</span><br></pre></td></tr></table></figure>
<p>根据curl返回的结果，可以判断代理是否设置正确。<br>1、如果返回的是本地计算机的外网IP，说明你的本地socksv5代理设置没有生效。<br>2、如果返回HTTP错误代码（404或者400之类的），检查Nginx与V2ray服务端的设置，也可以找找Nginx的日志找找线索。<br>3、当然返回服务器的外网IP是最好的情况。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>V2ray配置虽然麻烦，但是相较于SS优势明显<br>1、隐蔽性好。虽然道高一尺，魔高一丈，但是目前来说V2ray这种方法还是不容易被干扰的。<br>2、由于V2ray内建了DNS服务器和路由功能，不需要像SS那样配置路由表和安装额外的DNS服务器，算是一个一揽子解决方案。而且V2ray的socksv5代理支持转发DNS查询到内建的DNS服务器（明显SS并不支持转发DNS结果），可以直接将V2ray的socksv5代理设置为系统代理，上游DNS服务器不需要改动，国内域名还是国内DNS解析并且直连，国外域名用国外DNS服务器的解析结果并且走代理。</p>
]]></content>
  </entry>
</search>
